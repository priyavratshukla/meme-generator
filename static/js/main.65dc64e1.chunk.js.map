{"version":3,"sources":["components/HeaderComp.js","components/MemeGenerator.js","App.js","index.js"],"names":["MyHeader","react_default","a","createElement","className","style","width","padding","background","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImage","allMemeImgs","handleChnage","bind","assertThisInitialized","createRandomImg","_this2","fetch","then","response","json","setState","data","memes","console","log","event","_event$target","target","name","value","defineProperty","preventDefault","randNum","Math","floor","random","length","randImg","url","onSubmit","type","placeholder","onChange","position","top","left","height","src","Component","App","HeaderComp","components_MemeGenerator","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6PAiBeA,MAff,WAMC,OACCC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASC,MAPR,CACnBC,MAAM,OACNC,QAAQ,SACRC,WAAW,SAKTP,EAAAC,EAAAC,cAAA,6CC0EWM,cAlFd,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACZC,QAAQ,GACRC,WAAW,GACXC,YAAY,mCACZC,YAAY,IAEbX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAKe,gBAAkBf,EAAKe,gBAAgBF,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KATXA,mFAYM,IAAAgB,EAAAb,KAClBc,MAAM,qCACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACLH,EAAKK,SAAS,CACbV,YAAYQ,EAASG,KAAKC,QAE3BC,QAAQC,IAAIN,EAASG,MACrBE,QAAQC,IAAIN,EAASG,KAAKC,8CAIfG,GAAM,IAAAC,EACID,EAAME,OAArBC,EADWF,EACXE,KAAMC,EADKH,EACLG,MACb3B,KAAKkB,SAALpB,OAAA8B,EAAA,EAAA9B,CAAA,GACE4B,EAAMC,IAERN,QAAQC,IAAI,mDAIGC,GACfA,EAAMM,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWjC,KAAKI,MAAMI,YAAY0B,QAC5DC,EAAUnC,KAAKI,MAAMI,YAAYsB,GAASM,IAChDpC,KAAKkB,SAAS,CACbX,YAAY4B,qCAYb,OACC/C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAY8C,SAAUrC,KAAKY,iBAC1CxB,EAAAC,EAAAC,cAAA,SACCgD,KAAK,OACLX,MAAO3B,KAAKI,MAAMC,QAClBqB,KAAK,UACLa,YAAY,qBACZC,SAAUxC,KAAKS,eANjB,OASCrB,EAAAC,EAAAC,cAAA,SACCgD,KAAK,OACLX,MAAO3B,KAAKI,MAAME,WAClBoB,KAAK,aACLa,YAAY,qBACZC,SAAUxC,KAAKS,eAdjB,OAiBCrB,EAAAC,EAAAC,cAAA,sBAEDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,UAAKU,KAAKI,MAAMC,SAChBjB,EAAAC,EAAAC,cAAA,UAAKU,KAAKI,MAAME,YAChBlB,EAAAC,EAAAC,cAAA,OAAKE,MA/BO,CACdiD,SAAU,WACPC,IAAI,OACJC,KAAK,KA4BgBC,OAAO,QAAQnD,MAAM,QAAQoD,IAAK7C,KAAKI,MAAMG,uBA5E5CuC,aCiBbC,qBAbd,SAAAA,IAAc,OAAAjD,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,GAAAjD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,6EAIb,OACCZ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC0D,EAAD,MACA5D,EAAAC,EAAAC,cAAC2D,EAAD,cARcH,cCGlBI,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.65dc64e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction MyHeader(){\r\n\tconst headerstyle = {\r\n\t\twidth:'100%',\r\n\t\tpadding:'20px 0',\r\n\t\tbackground:'cyan'\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<nav className = \"navbar\" style={headerstyle}>\r\n\t\t\t\t<h1>Meme Generator</h1>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyHeader;\r\n","import React, {Component} from 'react';\r\n\r\nclass MemeGenerator extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\ttopText:'',\r\n\t\t\tbottomText:'',\r\n\t\t\trandomImage:'https://i.imgflip.com/30b1gx.jpg',\r\n\t\t\tallMemeImgs:[]\r\n\t\t}\r\n\t\tthis.handleChnage = this.handleChnage.bind(this)\r\n\t\tthis.createRandomImg = this.createRandomImg.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://api.imgflip.com/get_memes')\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tallMemeImgs:response.data.memes\r\n\t\t\t})\r\n\t\t\tconsole.log(response.data)\r\n\t\t\tconsole.log(response.data.memes)\r\n\t\t})\r\n\t}\r\n\r\n\thandleChnage(event){\r\n\t\tconst {name, value} = event.target\r\n\t\tthis.setState({\r\n\t\t\t[name]:value\r\n\t\t})\r\n\t\tconsole.log('working')\r\n\r\n\t}\r\n\r\n\tcreateRandomImg(event){\r\n\t\tevent.preventDefault()\r\n\t\tconst randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n\t\tconst randImg = this.state.allMemeImgs[randNum].url\r\n\t\tthis.setState({\r\n\t\t\trandomImage:randImg\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst imgStyle={\r\n\t\t\tposition: 'absolute',\r\n    \t\ttop:'20px',\r\n    \t\tleft:'0'\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<form className=\"meme-form\" onSubmit={this.createRandomImg}> \r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={this.state.topText}\r\n\t\t\t\t\t\tname=\"topText\"\r\n\t\t\t\t\t\tplaceholder=\"Enter the top text\"\r\n\t\t\t\t\t\tonChange={this.handleChnage}\r\n\t\t\t\t\t/> \r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={this.state.bottomText}\r\n\t\t\t\t\t\tname=\"bottomText\"\r\n\t\t\t\t\t\tplaceholder=\"Enter the top text\"\r\n\t\t\t\t\t\tonChange={this.handleChnage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<button>Gen</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"meme\">\r\n\t\t\t\t\t<h1>{this.state.topText}</h1>\r\n\t\t\t\t\t<h2>{this.state.bottomText}</h2>\r\n\t\t\t\t\t<img style={imgStyle} height=\"400px\" width=\"600px\" src={this.state.randomImage} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React, {Component} from 'react';\r\nimport HeaderComp from './components/HeaderComp';\r\nimport MemeGenerator from './components/MemeGenerator';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<HeaderComp />\r\n\t\t\t\t<MemeGenerator />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n//import App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}